(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{224:function(e,t,o){"use strict";o.r(t);var n={components:{Layout:o(175).a}},r=o(14),component=Object(r.a)(n,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("Layout",{attrs:{title:"Group By",description:"learn how to use group by in indexeddb using jsstore",keywords:"group, by, select, indexeddb, jsstore",contentSrc:"/home/runner/work/jsstore.docs/jsstore.docs/content/tutorial/select/group-by.md"}},[o("p",[e._v("The Group By is used to group the result-set by one or more columns. You can also use Aggregate functions with group by similar to what you can use in SQL.")]),e._v(" "),o("h4",{attrs:{id:"sqlwhere"}},[e._v("Sql (Where)")]),e._v(" "),o("pre",[o("code",[e._v("Select * From Table_Name;\nGroup By\nColumn_Name\n")])]),e._v(" "),o("h4",{attrs:{id:"jsstore"}},[e._v("JsStore")]),e._v(" "),o("pre",[o("code",[e._v("connection.select({\n    from: \"Table_Name\",\n    groupBy: Column_Name,\n    // You can specify multiple columns at a time by giving the columns name in an array.\n    // groupBy:['column1','column2']\n\n}).then(function(results) {\n    //results will be array of objects.\n    console.log(results);\n}).catch(function(error) {\n    alert(error.message);\n});\n")])]),e._v(" "),o("p",{staticClass:"margin-top-40px text-center"},[o("a",{staticClass:"btn info",attrs:{target:"_blank",href:"https://ujjwalguptaofficial.github.io/idbstudio/?db=Demo&query=select(%7B%0A%20%20%20%20from%3A%20%22Customers%22%2C%0A%20%20%20%20groupBy%3A%22country%22%0A%7D)%3B%0A"}},[e._v("Example")])])])}),[],!1,null,null,null);t.default=component.exports}}]);