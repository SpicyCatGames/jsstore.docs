"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1377],{4137:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,b=d["".concat(u,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(b,o(o({ref:t},s),{},{components:n})):a.createElement(b,o({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(4137));const l={sidebar_position:1,keywords:["table","api","query","indexeddb","jsstore"]},o="Table",i={unversionedId:"database/table",id:"database/table",title:"Table",description:"Table is like a collection where your data is stored inside a row and a field is identified by column.",source:"@site/docs/database/table.md",sourceDirName:"database",slug:"/database/table",permalink:"/docs/database/table",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/database/table.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,keywords:["table","api","query","indexeddb","jsstore"]},sidebar:"tutorialSidebar",previous:{title:"Database",permalink:"/docs/database/"},next:{title:"Column",permalink:"/docs/database/column"}},u={},c=[{value:"Schema",id:"schema",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3},{value:"Table Options",id:"table-options",level:2},{value:"1. name",id:"1-name",level:3},{value:"2.columns",id:"2columns",level:3},{value:"3.alter",id:"3alter",level:3}],s={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"table"},"Table"),(0,r.kt)("p",null,"Table is like a collection where your data is stored inside a ",(0,r.kt)("strong",{parentName:"p"},"row")," and a field is identified by ",(0,r.kt)("strong",{parentName:"p"},"column"),"."),(0,r.kt)("p",null,"Consider you want to store a json data - "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"var data = {\n    name:'ujjwal gupta',\n    country:'India'\n}\n")),(0,r.kt)("p",null,"Let's store the above data into a table"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"name"),(0,r.kt)("th",null,"country")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"ujjwal gupta"),(0,r.kt)("td",null,"India"))),(0,r.kt)("h2",{id:"schema"},"Schema"),(0,r.kt)("p",null,"Table Schema is an object which contains name of table & columns schema."),(0,r.kt)("h3",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"var table1 = {\n    name: \"table_name\",\n    columns: {\n        column1: { dataType: 'datatype', primaryKey: true },\n        column2 : { dataType: 'datatype'},\n        ..... ,\n        columnN: { dataType: 'datatype' }\n    }\n}\n")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'var tblProduct = {\n    name: \'Product\',\n    columns: {\n        // Here "Id" is name of column \n        id:{ primaryKey: true, autoIncrement: true },\n        itemName:  { notNull: true, dataType: "string" },\n        price:  { notNull: true, dataType: "number" },\n        quantity : { notNull: true, dataType: "number" }\n    }\n};\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note :-")," It is mandatory to have a column with a primary key for every table. A primary key is used to uniquely identify a record or data row."),(0,r.kt)("p",null,"For more information about column - please check ",(0,r.kt)("a",{parentName:"p",href:"/docs/database/column"},"column")," doc."),(0,r.kt)("h2",{id:"table-options"},"Table Options"),(0,r.kt)("h3",{id:"1-name"},"1. name"),(0,r.kt)("p",null,"name of the table"),(0,r.kt)("h3",{id:"2columns"},"2.columns"),(0,r.kt)("p",null,"collection of column to be used for the table."),(0,r.kt)("h3",{id:"3alter"},"3.alter"),(0,r.kt)("p",null,"alter is used to change the table schema. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It is an optional field. "),(0,r.kt)("li",{parentName:"ul"},"It is useful when changing the database schema. ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"var tblProduct = {\n    name: 'Product',\n    columns: {\n        id:{ primaryKey: true, autoIncrement: true },\n        count:{\n            dataType:'number'\n        }\n    },\n    alter:{\n        // 2 is database version to target\n        2: {\n            modify: {\n                id:{\n                    notNull:true\n                }\n            },\n            add:{\n                name:{\n                    dataType:'string'\n                }\n            },\n            drop:{\n                count:{\n                    \n                }\n            }\n        }\n    }\n}\n")),(0,r.kt)("p",null,"For more info about updating schema, read ",(0,r.kt)("a",{parentName:"p",href:"/docs/update-schema"},"here"),"."))}p.isMDXComponent=!0}}]);