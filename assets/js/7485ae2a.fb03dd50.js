"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9852],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2018:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1,keywords:["jsstore","get started","introduction","indexeddb","tutorial"]},i="Get started",l={unversionedId:"get-started",id:"get-started",title:"Get started",description:"In this get started tutorial we will learn how to do crud operation in indexeddb using jsstore. You can download the example of this tutorial from - Crud implementation",source:"@site/docs/get-started.md",sourceDirName:".",slug:"/get-started",permalink:"/docs/get-started",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/get-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,keywords:["jsstore","get started","introduction","indexeddb","tutorial"]},sidebar:"tutorialSidebar",next:{title:"Installation",permalink:"/docs/installation"}},s={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Connection",id:"connection",level:2},{value:"Creating Database",id:"creating-database",level:2},{value:"initDb",id:"initdb",level:2},{value:"Inserting data",id:"inserting-data",level:2},{value:"Read data",id:"read-data",level:2},{value:"Updating data",id:"updating-data",level:2},{value:"Remove data",id:"remove-data",level:2},{value:"Tutorial and examples",id:"tutorial-and-examples",level:2}],u={toc:d},p="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"get-started"},"Get started"),(0,r.kt)("p",null,"In this get started tutorial we will learn how to do crud operation in indexeddb using jsstore. You can download the example of this tutorial from - ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/simple_example"},"Crud implementation")),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"JsStore is a wrapper for ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"},"IndexedDB"),". It provides simple SQL like api which is easy to learn & use."),(0,r.kt)("p",null,"IndexedDb query can be executed inside web worker & JsStore preserve this functionality by providing a seperate worker file. "),(0,r.kt)("p",null,"So query can be executed both way - inside web worker or without web worker. But it is strongly recommended to use ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers"},"web worker")," because it runs scripts in background thread."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"There are various ways to install JsStore. For more about installation check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/installation"},"installation")," page"),(0,r.kt)("p",null,"Let's download the script from github. Go to this link - ",(0,r.kt)("a",{href:"https://github.com/ujjwalguptaofficial/JsStore/releases/latest",target:"_blank"},"jsstore release")," & download files jsstore.js & jsstore.worker.js. "),(0,r.kt)("p",null,"Now create a html page & include jsstore.js - "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Crud Demo using jsstore</title>\n    <script src="jsstore.js"><\/script>\n</head>\n<body>\n<h4>We have included JsStore in this html code.</h4>\n</body>\n</html>\n\n')),(0,r.kt)("h2",{id:"connection"},"Connection"),(0,r.kt)("p",null,"A connection allow you to query database. It can be initialized with web worker file or without web worker file. "),(0,r.kt)("p",null,"When initialized with worker file - jsstore create a web worker and query is executed inside web worker. For more info, check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/connection"},"Connection")," page"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var connection = new JsStore.Connection(new Worker('jsstore.worker.js'));\n")),(0,r.kt)("h2",{id:"creating-database"},"Creating Database"),(0,r.kt)("p",null,"JsStore follows SQL approach to create database - A database is consist of tables and a table is consist of columns."),(0,r.kt)("p",null,"Lets see an example - "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var dbName =\'JsStore_Demo\';\nvar tblProduct = {\n    name: \'Product\',\n    columns: {\n        // Here "Id" is name of column \n        id:{ primaryKey: true, autoIncrement: true },\n        itemName:  { notNull: true, dataType: "string" },\n        price:  { notNull: true, dataType: "number" },\n        quantity : { notNull: true, dataType: "number" }\n    }\n};\nvar database = {\n    name: dbName,\n    tables: [tblProduct]\n}\n')),(0,r.kt)("p",null,"As written in the code you can define constraints like autoincrement, data type, default, not null similar to what you can do in SQL. Read more about column ",(0,r.kt)("a",{parentName:"p",href:"/docs/database/column"},"here")),(0,r.kt)("p",null,"Now we need to use the above database schema to create the database in indexeddb."),(0,r.kt)("h2",{id:"initdb"},"initDb"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/database#2callinitdb"},"initDb")," api is used to initiate the database. It accepts database schema & creates or open database. "),(0,r.kt)("p",null,"It returns boolean value which can be used to know if db is created or opened."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const isDbCreated = await connection.initDb(database);\nif(isDbCreated === true){\n    console.log("db created");\n    // here you can prefill database with some data\n}\nelse {\n    console.log("db opened");\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note :-")," The connection variable will be used to execute future queries so we don't need to initiate it multiple times."),(0,r.kt)("h2",{id:"inserting-data"},"Inserting data"),(0,r.kt)("p",null,"JsStore provides ",(0,r.kt)("a",{parentName:"p",href:"/docs/insert/"},"insert")," API for inserting data."),(0,r.kt)("p",null,"Let's say we have below value -"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var value = {\n    itemName: 'Blue Jeans',\n    price: 2000,\n    quantity: 1000\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"value does not contains id property because it is an autoincrement column. It will be automatically generated before storing data. ")),(0,r.kt)("p",null,"Now, let's insert this value into db -  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var insertCount = await connection.insert({\n    into: 'Product',\n    values: [value]\n});\n\nconsole.log(`${insertCount} rows inserted`);\n")),(0,r.kt)("h2",{id:"read-data"},"Read data"),(0,r.kt)("p",null,"JsStore provides ",(0,r.kt)("a",{parentName:"p",href:"/docs/select/"},"select")," API for reading data. Let's say I want to retrieve the record with Id of 5."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// results will be array of objects\nvar results = await connection.select({\n    from: 'Product',\n    where: {\n        id: 5\n    }\n});\n\nalert(results.length + 'record found');\n")),(0,r.kt)("p",null,'You can also perform operations like- "IN", "LIKE", "BETWEEN", "LIMIT" etc. For more filtering option , read ',(0,r.kt)("a",{parentName:"p",href:"/docs/where/"},"where doc"),"."),(0,r.kt)("h2",{id:"updating-data"},"Updating data"),(0,r.kt)("p",null,"JsStore provides ",(0,r.kt)("a",{parentName:"p",href:"/docs/update/"},"update")," API for reading data. "),(0,r.kt)("p",null,"Consider we want to update Quantity to 2000 on the products with item name containing substring 'black'."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var rowsUpdated = await connection.update({ \n    in: 'Product',\n    where: {\n        itemName: {\n            like: '%black%'\n        }\n    },\n    set: {\n        quantity: 2000\n    }\n});\nalert(rowsUpdated + ' rows updated');\n")),(0,r.kt)("h2",{id:"remove-data"},"Remove data"),(0,r.kt)("p",null,"JsStore provides ",(0,r.kt)("a",{parentName:"p",href:"/docs/remove"},"remove")," API for reading data. "),(0,r.kt)("p",null,"Consider we want to delete the product with Id of 10."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var rowsDeleted = await connection.remove({\n    from: 'Product',\n    where: {\n        id: 10\n    }\n});\nalert(rowsDeleted + ' record deleted');\n")),(0,r.kt)("p",null,"We hope you have understood this article. Now let's make something awesome."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"tutorial-and-examples"},"Tutorial and examples"),(0,r.kt)("p",null,"Check it out some tutorial & examples for more understanding -"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/vue"},"Vue integration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/react"},"React integration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/angular"},"Angular integration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/svelte"},"Svelte integration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/electron"},"ElectronJs integration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/without_web_worker"},"JsStore without web worker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/JsStore/tree/master/examples/webpack"},"Building an indexeddb app with webpack")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples"},"Crud implementation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/tree/master/typescript"},"Using jsstore in typescript"))))}c.isMDXComponent=!0}}]);